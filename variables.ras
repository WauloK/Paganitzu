var
	// Other variables	
	mychar : string = "A";
	myp, mym : pointer;
	strpos, p, q, u, v : byte;
	tempInt : Integer;
	message : string = "Press 'S' or Fire to start! Welcome to Paganitzu! Use Joysticks or Keys: QA = Up/Down M, = Left/Right. Check out BlueBilby.com ... ";
	strlen : byte;
	titledata : incbin("trse.bin") compressed;
	
	// Records
	gameStats_record = record
		lives : byte;
		bonus : Integer;
		keys : byte;
		room: byte;
		score : Integer;
		hiScore : Integer;
		gameRunning : boolean;
		titlePlayed : boolean;
	end;
	gameStats : gameStats_record;
	
	// Game HUD
	HUDData: array[] of byte = (063, 255, 255, 255, 255, 255, 063, 095, 223, 223, 127, 127, 063, 119, 119, 119, 093, 127, 063, 095, 119, 119, 119, 127, 063, 119, 119, 119, 127, 127, 063, 119, 223, 223, 127, 127, 063, 255, 255, 255, 255, 255, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 063, 255, 255, 255, 255, 255, 063, 095, 127, 125, 125, 095, 061, 253, 221, 221, 221, 255, 063, 125, 253, 221, 125, 127, 063, 221, 221, 221, 221, 255, 061, 127, 127, 125, 221, 095, 063, 255, 255, 255, 255, 255, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 063, 255, 255, 255, 255, 255, 061, 253, 093, 221, 095, 095, 061, 255, 125, 221, 253, 255, 061, 255, 125, 221, 127, 127, 061, 255, 125, 221, 255, 223, 061, 093, 095, 125, 093, 127, 063, 255, 255, 255, 255, 255, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 063, 255, 255, 255, 255, 255, 063, 221, 213, 221, 245, 255, 063, 221, 223, 221, 223, 255, 063, 215, 215, 213, 247, 255, 063, 221, 223, 247, 253, 255, 063, 221, 213, 247, 215, 255, 063, 255, 255, 255, 255, 255, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 063, 255, 255, 255, 255, 255, 061, 127, 127, 125, 223, 095, 061, 221, 221, 221, 221, 255, 061, 125, 221, 221, 223, 127, 061, 221, 221, 221, 223, 223, 061, 127, 125, 223, 125, 127, 063, 255, 255, 255, 255, 255, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000);
	spriteData: array[] of byte = (000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 068, 068, 021, 085, 081, 068, 021, 085, 021, 084, 085, 021, 021, 084, 068, 017, 042, 168, 213, 086, 213, 086, 213, 086, 213, 086, 213, 086, 213, 086, 063, 252, 170, 170, 149, 085, 149, 085, 149, 085, 170, 170, 085, 149, 085, 149, 085, 149, 042, 168, 215, 214, 223, 246, 223, 246, 215, 214, 215, 214, 213, 086, 063, 252, 017, 016, 017, 016, 017, 016, 017, 016, 017, 016, 017, 016, 017, 016, 017, 016, 000, 000, 000, 000, 000, 000, 255, 255, 255, 255, 000, 000, 000, 000, 000, 000, 003, 192, 003, 192, 003, 192, 003, 192, 003, 192, 003, 192, 003, 192, 003, 192, 003, 192, 003, 192, 003, 192, 255, 192, 255, 192, 000, 000, 000, 000, 000, 000, 003, 192, 003, 192, 003, 192, 003, 255, 003, 255, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 003, 255, 003, 255, 003, 192, 003, 192, 003, 192, 000, 000, 000, 000, 000, 000, 255, 192, 255, 192, 003, 192, 003, 192, 003, 192, 003, 192, 003, 192, 003, 192, 255, 255, 255, 255, 003, 192, 003, 192, 003, 192, 002, 192, 010, 240, 042, 252, 170, 255, 255, 170, 063, 168, 015, 160, 003, 128, 002, 192, 010, 240, 042, 252, 170, 255, 085, 170, 021, 168, 005, 160, 001, 128, 001, 192, 005, 240, 021, 252, 085, 255, 255, 085, 063, 084, 015, 080, 003, 064, 002, 064, 010, 080, 042, 084, 170, 085, 255, 170, 063, 168, 015, 160, 003, 128, 252, 000, 204, 000, 255, 000, 003, 192, 000, 240, 003, 060, 000, 012, 000, 048, 034, 032, 034, 032, 170, 168, 017, 016, 017, 016, 017, 016, 017, 016, 085, 084, 010, 160, 042, 104, 170, 154, 170, 170, 170, 170, 174, 170, 043, 168, 010, 160, 042, 168, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 042, 168, 131, 194, 047, 248, 015, 240, 143, 242, 035, 200, 143, 242, 039, 216, 015, 240, 003, 192, 047, 248, 143, 242, 015, 240, 035, 200, 143, 242, 039, 216, 143, 242, 002, 064, 010, 160, 042, 160, 040, 000, 010, 128, 064, 160, 032, 040, 010, 160, 000, 144, 002, 168, 010, 128, 010, 040, 002, 160, 016, 168, 032, 040, 010, 160, 000, 036, 000, 170, 002, 160, 002, 138, 002, 160, 004, 168, 032, 040, 010, 160, 000, 144, 002, 168, 010, 168, 010, 000, 002, 160, 016, 168, 032, 040, 010, 160);
	// Constants
	BlankTileOffset : byte = 0;
	DirtTile : byte = 1;
	WallTile : byte = 2;						// These tiles cannot be walked on
	BrickTile : byte = 3;						//
	KeyholeTile : byte = 4;					//
	SpikesShaftTile : byte = 5;			//
	PipesStartTile : byte = 6;			//
	PipesEndTile : byte = 12;				//
	DiamondStartTile : byte = 13;
	KeyTile : byte = 17;
	SpikesHeadTile : byte = 18;
	Boulder : byte = 19;
	WaterTile : byte = 20;
	SpiderStart : byte = 21;
	SnakeStart : byte = 23;
	
	// Levels data
	